<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sneaker World ðŸ‘Ÿ</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .store-container {
            display: flex;
            min-height: 100vh;
        }

        .products-section {
            flex: 3;
            padding: 20px;
            background-color: #ffffff;
            overflow-y: auto;
        }

        .cart-section {
            flex: 1;
            background-color: #e9ecef;
            padding: 20px;
            box-shadow: -5px 0 15px rgba(0,0,0,0.1);
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .product-item {
            border: 1px solid #dee2e6;
            border-radius: 10px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background-color: #fff;
            display: flex;
            flex-direction: column;
        }

        .product-item:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        .product-item img {
            width: 100%;
            height: 250px;
            object-fit: cover;
        }

        .product-details {
            padding: 15px;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        .cart-item {
            background-color: #ffffff;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .cart-total {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            text-align: center;
            margin-top: 20px;
        }

        .btn-add-to-cart {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .btn-add-to-cart:hover {
            background-color: #0056b3;
        }

        .navbar {
            position: sticky;
            top: 0;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
        <div class="container">
            <a class="navbar-brand" href="#">
                <i class="bi bi-shop"></i> Sneaker World
            </a>
        </div>
    </nav>

    <div class="store-container">
        <!-- Productos -->
        <div class="products-section">
            <h2 class="mb-4">CatÃ¡logo de Zapatillas</h2>
            <div class="product-grid" id="sneakers">
                <% sneakers.forEach(sneaker => { %>
                    <div class="product-item">
                        <img src="<%= sneaker.imageUrl %>" alt="<%= sneaker.brand %> <%= sneaker.model %>">
                        <div class="product-details">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h5 class="mb-0"><%= sneaker.brand %> <%= sneaker.model %></h5>
                                <span class="badge bg-secondary"><%= sneaker.category %></span>
                            </div>
                            <p class="text-muted mb-2">
                                <i class="bi bi-palette me-2"></i><%= sneaker.color %> 
                                | <i class="bi bi-box me-2"></i>Stock: <%= sneaker.stock %>
                            </p>
                            <div class="d-flex justify-content-between align-items-center mt-auto">
                                <strong class="text-primary h5">$<%= sneaker.price %></strong>
                                <button class="btn-add-to-cart" 
                                    onclick="addToCart('<%= sneaker._id %>', <%= sneaker.price %>, '<%= sneaker.brand %> <%= sneaker.model %>', <%= sneaker.stock %>)">
                                    Agregar <i class="bi bi-cart-plus ms-2"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>

        <!-- Carrito -->
        <div class="cart-section">
            <h3 class="mb-4">ðŸ›’ Carrito de Compras</h3>
            <div id="cart-items">
                <div id="cart-empty" class="text-center text-muted">
                    Tu carrito estÃ¡ vacÃ­o
                </div>
            </div>
            <div id="cart-total" class="cart-total" style="display:none;">
                <strong>Total: $<span id="total-amount">0.00</span></strong>
                <button class="btn btn-primary w-100 mt-3" onclick="checkout()">
                    Finalizar Compra <i class="bi bi-arrow-right ms-2"></i>
                </button>
            </div>
        </div>
    </div>

    <script>
        // Carrito en memoria
        let cart = [];

        // FunciÃ³n para agregar productos al carrito
        function addToCart(id, price, name, stock) {
            let productInCart = cart.find(item => item.id === id);
            if (productInCart) {
                if (productInCart.quantity < stock) {
                    productInCart.quantity++;
                    updateCart();
                } else {
                    Swal.fire('Â¡Stock insuficiente!', 'No puedes agregar mÃ¡s unidades de este producto.', 'error');
                }
            } else {
                cart.push({ id, price, name, quantity: 1 });
                updateCart();
            }
        }

        // FunciÃ³n para eliminar productos del carrito
        function removeFromCart(id) {
            cart = cart.filter(item => item.id !== id);
            updateCart();
        }

        // FunciÃ³n para actualizar el carrito
        function updateCart() {
            let cartItems = document.getElementById('cart-items');
            let cartEmpty = document.getElementById('cart-empty');
            let cartTotal = document.getElementById('cart-total');
            let totalAmount = document.getElementById('total-amount');

            cartItems.innerHTML = '';
            let total = 0;

            cart.forEach(item => {
                let cartItemElement = document.createElement('div');
                cartItemElement.className = 'cart-item';
                cartItemElement.innerHTML = `
                    <div>
                        <span>${item.name}</span>
                        <small class="text-muted">x${item.quantity}</small>
                    </div>
                    <div class="d-flex align-items-center">
                        <strong>$${(item.price * item.quantity).toFixed(2)}</strong>
                        <button class="btn btn-sm btn-danger ms-2" onclick="removeFromCart('${item.id}')">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                `;
                cartItems.appendChild(cartItemElement);
                total += item.price * item.quantity;
            });

            totalAmount.textContent = total.toFixed(2);

            if (cart.length === 0) {
                cartEmpty.style.display = 'block';
                cartTotal.style.display = 'none';
            } else {
                cartEmpty.style.display = 'none';
                cartTotal.style.display = 'block';
            }
        }

        // FunciÃ³n para proceder al pago (finalizar compra)
        function checkout() {
            if (cart.length === 0) {
                Swal.fire('Â¡El carrito estÃ¡ vacÃ­o!', 'Agrega productos antes de continuar con la compra.', 'warning');
                return;
            }

            // Preparar los datos del carrito
            const orderData = {
                cart: cart.map(item => ({
                    id: item.id,
                    name: item.name,
                    quantity: item.quantity
                }))
            };

            // Enviar los datos al servidor
            fetch('/buy', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(orderData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.url) {
                        // Redirigir al usuario a PayPal para completar el pago
                        window.location.href = data.url;
                    } else {
                        Swal.fire('Error', 'Hubo un problema al procesar la compra. Intenta nuevamente.', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error al procesar el pago:', error);
                    Swal.fire('Error', 'Hubo un problema al procesar el pago. Intenta nuevamente.', 'error');
                });
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>